{"version":3,"sources":["components/cookies/Cookies.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["parseStringToCookies","cookieString","split","map","namevalue","name","value","CookiesTable","cookies","Cookies","trim","App","document","cookie","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oOAAMA,EAAuB,SAC3BC,GAD2B,OAG3BA,EAAaC,MAAM,MAAMC,KAAI,SAACC,GAAe,IAAD,EACpBA,EAAUF,MAAM,KADI,mBAE1C,MAAO,CAAEG,KAFiC,KAE3BC,MAF2B,UAKxCC,EAAe,SAAC,GAAD,IACnBC,EADmB,EACnBA,QADmB,OAKnB,gCACE,kCACE,+BACE,sCACA,0CAEDA,EAAQL,KAAI,gBAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACX,+BACE,6BAAKD,IACL,6BAAKC,MAFED,YAoBFI,EAXC,SAAC,GAAD,IAAGR,EAAH,EAAGA,aAAH,OACd,oCACE,yCACCA,EAAaS,OACZ,cAAC,EAAD,CAAcF,QAASR,EAAqBC,KAE5C,yDCvBSU,EATH,WACV,IAAMV,EAAeW,SAASC,OAC9B,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAASb,aAAcA,OCOdc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,M","file":"static/js/main.cbe2ecf9.chunk.js","sourcesContent":["const parseStringToCookies = (\r\n  cookieString: string\r\n): Array<{ name: string; value: string }> =>\r\n  cookieString.split(\"; \").map((namevalue) => {\r\n    const [name, value] = namevalue.split(\"=\");\r\n    return { name, value };\r\n  });\r\n\r\nconst CookiesTable = ({\r\n  cookies,\r\n}: {\r\n  cookies: Array<{ name: string; value: string }>;\r\n}) => (\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Value</th>\r\n      </tr>\r\n      {cookies.map(({ name, value }) => (\r\n        <tr key={name}>\r\n          <td>{name}</td>\r\n          <td>{value}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nconst Cookies = ({ cookieString }: { cookieString: string }) => (\r\n  <section>\r\n    <h2>Cookies</h2>\r\n    {cookieString.trim() ? (\r\n      <CookiesTable cookies={parseStringToCookies(cookieString)} />\r\n    ) : (\r\n      <span>No cookies found!</span>\r\n    )}\r\n  </section>\r\n);\r\n\r\nexport default Cookies;\r\n","import \"./App.css\";\nimport Cookies from \"./components/cookies/Cookies\";\n\nconst App = () => {\n  const cookieString = document.cookie;\n  return (\n    <div className=\"App\">\n      <Cookies cookieString={cookieString} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}